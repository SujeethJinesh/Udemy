print("Hello World!")
setwd("~/Dropbox/Udemy/Machine Learning A-Z/Part 1 - Data Preprocessing")
dataset = read.csv('Data.csv')
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
View(dataset)
dataset$Country = factor()
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
install.packages('caTools')
library("caTools", lib.loc="~/anaconda/lib/R/library")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
dataset$Purchased = factor(dataset$Country,
levels = c('No', 'Yes'),
labels = c(0,1))
#splitting into training set and test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
#Now we need to avg the values of the features in order to
#put them into the null/NaN values.
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
#Encoding categorical data here, first label encoding, then one hot encoding
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Country,
levels = c('No', 'Yes'),
labels = c(0,1))
#splitting into training set and test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
dataset = read.csv('Data.csv')
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Country,
levels = c('No', 'Yes'),
labels = c(0,1))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
dataset = read.csv('Data.csv')
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
#Now we need to avg the values of the features in order to
#put them into the null/NaN values.
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
#Encoding categorical data here, first label encoding, then one hot encoding
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
#splitting into training set and test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(dataset)
View(test_set)
training_set[, 2:3] = scale(training_set)
test_setp[, 2:3] = scale(test_set)
#Feature Scaling
training_set[, 2:3] = scale(training_set[, 2:3])
test_setp[, 2:3] = scale(test_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
#Now we need to avg the values of the features in order to
#put them into the null/NaN values.
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
#Encoding categorical data here, first label encoding, then one hot encoding
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
#splitting into training set and test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Feature Scaling
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
